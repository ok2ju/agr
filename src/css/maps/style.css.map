{"version":3,"sources":["style.css","utils/_helpers.scss","base/_base.scss","utils/_fontUtils.scss","base/_variables.scss","base/_typography.scss","layout/_layout.scss","../../bower_components/susy/sass/susy/language/susy/_container.scss","../../bower_components/susy/sass/susy/output/support/_clearfix.scss","utils/_clearfix.scss","module/_header.scss","../../bower_components/susy/sass/susy/language/susy/_span.scss","../../bower_components/susy/sass/susy/output/shared/_direction.scss","../../bower_components/susy/sass/susy/language/susy/_gutters.scss","../../bower_components/susy/sass/susy/output/support/_rem.scss","module/_header-nav.scss","module/_slick.scss","module/_header-slider.scss","utils/_centered.scss","module/_restaurant.scss","module/_project.scss","module/_events.scss"],"names":[],"mappings":"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","file":"style.css","sourcesContent":[".pull-left{float:left}.pull-right{float:right}html{box-sizing:border-box;font-size:62.5%}html,body{height:100%}*{margin:0;padding:0}*,*:before,*:after{box-sizing:inherit}body{-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale;background-color:#fbfbfb;color:#212121;font-family:\"Times New Roman\",sans-serif;font-size:1.6rem;text-rendering:optimizeLegibility}a{text-decoration:none}img{vertical-align:middle}img,video,canvas{max-width:100%}iframe{height:100%;left:0;position:absolute;top:0;width:100%}@font-face{font-family:'Open Sans';src:url(\"../fonts/OpenSans/OpenSans-Light.ttf\") format(\"truetype\");font-weight:300;font-style:normal}@font-face{font-family:'Open Sans';src:url(\"../fonts/OpenSans/OpenSans-Regular.ttf\") format(\"truetype\");font-weight:400;font-style:normal}@font-face{font-family:'Open Sans';src:url(\"../fonts/OpenSans/OpenSans-Semibold.ttf\") format(\"truetype\");font-weight:600;font-style:normal}@font-face{font-family:'Open Sans';src:url(\"../fonts/OpenSans/OpenSans-Bold.ttf\") format(\"truetype\");font-weight:700;font-style:normal}.container{max-width:1200px;margin-left:auto;margin-right:auto}.container:after{content:\" \";display:block;clear:both}.row::after{clear:both;content:'';display:table}.header{max-width:1200px;margin-left:auto;margin-right:auto;padding-top:38px;text-align:center}.header:after{content:\" \";display:block;clear:both}.header__inner{width:83.33333%;float:left;padding-left:0.83333%;padding-right:0.83333%;margin-left:8.33333%;float:none}.header__inner::after{clear:both;content:'';display:table}.header__social,.header__search{width:20%;float:left;padding-left:1%;padding-right:1%}.header__logo{width:60%;float:left;padding-left:1%;padding-right:1%}.header__search{padding-top:25px;text-align:right}.header__search input{font-family:\"Times New Roman\",sans-serif;font-size:1.6rem;width:90%;outline:none;border:0;border-bottom:1px solid #e1e1e1;color:#7a7a7a;padding-bottom:5px}.header__social{padding-top:25px;text-align:left}.header__social a{display:inline-block;padding:0 15px}.header__social a:first-child{padding-left:0}.header__social a:last-child{padding-right:0}.header__social img{width:24px}.main-nav{padding:35px 0;margin-bottom:40px}.main-nav__item{display:inline-block;padding:0 25px}.main-nav-link{font-family:\"Times New Roman\",sans-serif;font-size:1.8rem;color:#000}.slick-slider{position:relative;display:block;box-sizing:border-box;-webkit-touch-callout:none;-webkit-user-select:none;-khtml-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;-ms-touch-action:pan-y;touch-action:pan-y;-webkit-tap-highlight-color:transparent}.slick-list{position:relative;overflow:hidden;display:block;margin:0;padding:0}.slick-list:focus{outline:none}.slick-list.dragging{cursor:pointer;cursor:hand}.slick-slider .slick-track,.slick-slider .slick-list{-webkit-transform:translate3d(0, 0, 0);-moz-transform:translate3d(0, 0, 0);-ms-transform:translate3d(0, 0, 0);-o-transform:translate3d(0, 0, 0);transform:translate3d(0, 0, 0)}.slick-track{position:relative;left:0;top:0;display:block}.slick-track:before,.slick-track:after{content:\"\";display:table}.slick-track:after{clear:both}.slick-loading .slick-track{visibility:hidden}.slick-slide{float:left;height:100%;min-height:1px;display:none}[dir=\"rtl\"] .slick-slide{float:right}.slick-slide img{display:block}.slick-slide.slick-loading img{display:none}.slick-slide.dragging img{pointer-events:none}.slick-initialized .slick-slide{display:block}.slick-loading .slick-slide{visibility:hidden}.slick-vertical .slick-slide{display:block;height:auto;border:1px solid transparent}.slick-arrow.slick-hidden{display:none}.slick-dotted.slick-slider{margin-bottom:30px}.slick-dots{position:absolute;bottom:0;list-style:none;display:block;text-align:center;padding:0;margin:0;width:100%}.slick-dots li{position:relative;display:inline-block;height:20px;width:20px;margin:0 5px;padding:0;cursor:pointer}.slick-dots li button{border:0;background:transparent;display:block;height:20px;width:20px;outline:none;line-height:0px;font-size:0px;color:transparent;padding:5px;cursor:pointer}.slick-dots li button:hover,.slick-dots li button:focus{outline:none}.slick-dots li button:hover:before,.slick-dots li button:focus:before{opacity:1}.slick-dots li button:before{position:absolute;top:0;left:0;content:\"â€¢\";width:20px;height:20px;font-size:26px;line-height:20px;text-align:center;color:#000;opacity:.25;-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale}.slick-dots li.slick-active button:before{color:#000;opacity:.75}.img-fill{width:100%;display:block;overflow:hidden;position:relative;text-align:center}.img-fill img{min-height:100%;min-width:100%;position:relative;display:inline-block;max-width:none}.blocks-box,.slick-slider{margin:0;padding:0 !important}.slick-slide{float:left;padding:0}.Modern-Slider .item .img-fill .info{position:absolute;width:100%;height:100%;top:0px;left:0px;background:rgba(0,0,0,0.5);text-align:center}.Modern-Slider .item .img-fill img{filter:blur(5px)}.Modern-Slider .item .info>div{bottom:auto;top:50%;transform:translateY(-50%);position:absolute;text-align:left;right:20%}.Modern-Slider .item .info>div span{background:#fff;display:inline-block;font-weight:600;padding:5px 10px}.Modern-Slider .item .info>div span:last-child{margin-top:-5px}.Modern-Slider .NextArrow{position:absolute;top:50%;right:0px;width:45px;height:45px;background:rgba(0,0,0,0.5);border:0 none;margin-top:-22.5px;text-align:center;color:#FFF;z-index:5}.Modern-Slider .NextArrow:before{content:'\\f105'}.Modern-Slider .PrevArrow{position:absolute;top:50%;left:0px;width:45px;height:45px;background:rgba(0,0,0,0.5);border:0 none;margin-top:-22.5px;text-align:center;color:#FFF;z-index:5}.Modern-Slider .PrevArrow:before{content:'\\f104'}.Modern-Slider{background:#000}.restaurants__header{max-width:1200px;margin-left:auto;margin-right:auto;padding:90px 0}.restaurants__header:after{content:\" \";display:block;clear:both}.restaurants__header-inner{width:33.33333%;float:left;padding-left:0.83333%;padding-right:0.83333%;float:none;margin:0 auto}.restaurants__title{font-family:\"Times New Roman\",sans-serif;font-weight:600;font-size:3rem;color:#000;text-align:center;margin-bottom:40px}.restaurants__text{font-family:\"Times New Roman\",sans-serif;font-size:1.8rem;color:#000;line-height:27px;text-align:center}.restaurants__body{max-width:1590px;margin-left:auto;margin-right:auto}.restaurants__body:after{content:\" \";display:block;clear:both}.restaurants .column{width:30.18868%;float:left;position:relative;min-height:1px;margin-right:4.71698%}.restaurants .column:last-child{margin-right:0}.restaurant figure img{position:relative}.restaurant:hover img{z-index:100}.restaurant-hover{position:absolute;top:0;left:0;height:100%;width:100%}.restaurant-hover:hover .restaurant-hover__body{opacity:0}.restaurant-hover:hover .restaurant-hover__inf{opacity:1}.restaurant-hover__body{bottom:auto;top:50%;transform:translateY(-50%);position:relative;text-align:center;opacity:1;transition:opacity .5s ease-in-out}.restaurant-hover__inf{bottom:auto;top:50%;transform:translateY(-50%);position:relative;text-align:center;opacity:0;transition:opacity .5s ease-in-out}.projects__header{max-width:1200px;margin-left:auto;margin-right:auto;padding:90px 0}.projects__header:after{content:\" \";display:block;clear:both}.projects__header-inner{width:33.33333%;float:left;padding-left:0.83333%;padding-right:0.83333%;float:none;margin:0 auto}.projects__title{font-family:\"Times New Roman\",sans-serif;font-weight:600;font-size:3rem;color:#000;text-align:center;margin-bottom:40px}.projects__text{font-family:\"Times New Roman\",sans-serif;font-size:1.8rem;color:#000;line-height:27px;text-align:center}.projects__body{max-width:1590px;margin-left:auto;margin-right:auto}.projects__body:after{content:\" \";display:block;clear:both}.projects .column{width:30.18868%;float:left;position:relative;min-height:1px;margin-right:4.71698%}.projects .column:last-child{margin-right:0}.slider-nav__item{display:inline-block}\n",".pull-left {\r\n  float: left;\r\n}\r\n\r\n.pull-right {\r\n  float: right;\r\n}\r\n","$susy: (\r\n  columns: 12,\r\n  container: 1200px,\r\n  gutters: 1/4,\r\n  math: fluid,\r\n  gutter-position: inside,\r\n  global-box-sizing: border-box\r\n);\r\n\r\nhtml {\r\n  box-sizing: border-box;\r\n  font-size: 62.5%;\r\n}\r\n\r\nhtml,\r\nbody {\r\n  height: 100%;\r\n}\r\n\r\n* {\r\n  margin: 0;\r\n  padding: 0;\r\n}\r\n\r\n*,\r\n*:before,\r\n*:after {\r\n  box-sizing: inherit;\r\n}\r\n\r\nbody {\r\n  @include font-smoothing;\r\n  background-color: $body-color;\r\n  color: $primary-font-color;\r\n  font-family: $primary-font;\r\n  font-size: $font-size-base;\r\n  text-rendering: optimizeLegibility;\r\n}\r\n\r\na {\r\n  text-decoration: none;\r\n}\r\n\r\nimg {\r\n  vertical-align: middle;\r\n}\r\n\r\nimg,\r\nvideo,\r\ncanvas {\r\n  max-width: 100%;\r\n}\r\n\r\niframe {\r\n  height: 100%;\r\n  left: 0;\r\n  position: absolute;\r\n  top: 0;\r\n  width: 100%;\r\n}\r\n","// rem fallback\r\n@function calculateRem($size) {\r\n  $remSize: $size / 16px;\r\n  @return $remSize * 1rem;\r\n}\r\n\r\n@mixin font-size($size) {\r\n  font-size: $size;\r\n  font-size: calculateRem($size);\r\n}\r\n\r\n// font smoothing\r\n@mixin font-smoothing {\r\n  -webkit-font-smoothing: antialiased;\r\n  -moz-osx-font-smoothing: grayscale;\r\n}\r\n","//## Typography\r\n\r\n$primary-font: 'Times New Roman', sans-serif;\r\n\r\n$font-size-base: 1.6rem;\r\n\r\n//## Colors\r\n\r\n$body-color: #fbfbfb;\r\n\r\n$base-font-color: #000;\r\n$primary-font-color: lighten($base-font-color, 13%);\r\n$secondary-font-color: #999;\r\n\r\n//## Media queries breakpoints\r\n","@font-face {\r\n  font-family: 'Open Sans';\r\n  src: url('../fonts/OpenSans/OpenSans-Light.ttf') format('truetype');\r\n  font-weight: 300;\r\n  font-style: normal;\r\n}\r\n\r\n@font-face {\r\n  font-family: 'Open Sans';\r\n  src: url('../fonts/OpenSans/OpenSans-Regular.ttf') format('truetype');\r\n  font-weight: 400;\r\n  font-style: normal;\r\n}\r\n\r\n@font-face {\r\n  font-family: 'Open Sans';\r\n  src: url('../fonts/OpenSans/OpenSans-Semibold.ttf') format('truetype');\r\n  font-weight: 600;\r\n  font-style: normal;\r\n}\r\n\r\n@font-face {\r\n  font-family: 'Open Sans';\r\n  src: url('../fonts/OpenSans/OpenSans-Bold.ttf') format('truetype');\r\n  font-weight: 700;\r\n  font-style: normal;\r\n}\r\n",".container {\r\n  @include container;\r\n}\r\n\r\n.row {\r\n  @include clearfix;\r\n}\r\n","// Container Syntax\n// ================\n\n// Container [mixin]\n// -----------------\n// Set a container element\n// - [$layout]  : <settings>\n@mixin container(\n  $layout: $susy\n) {\n  $inspect    : $layout;\n  $layout     : parse-grid($layout);\n\n  $_width     : get-container-width($layout);\n  $_justify   : parse-container-position(susy-get(container-position, $layout));\n  $_property  : if(susy-get(math, $layout) == static, width, max-width);\n\n  $_box       : susy-get(box-sizing, $layout);\n\n  @if $_box {\n    @include output((box-sizing: $_box));\n  }\n\n  @include susy-inspect(container, $inspect);\n  @include float-container($_width, $_justify, $_property);\n  @include show-grid($layout);\n}\n\n// Container [function]\n// --------------------\n// Return container width\n// - [$layout]  : <settings>\n@function container(\n  $layout: $susy\n) {\n  $layout: parse-grid($layout);\n  @return get-container-width($layout);\n}\n\n// Get Container Width\n// -------------------\n// Calculate the container width\n// - [$layout]: <settings>\n@function get-container-width(\n  $layout: $susy\n) {\n  $layout         : parse-grid($layout);\n  $_width         : susy-get(container, $layout);\n  $_column-width  : susy-get(column-width, $layout);\n  $_math          : susy-get(math, $layout);\n\n  @if not($_width) or $_width == auto {\n    @if valid-column-math($_math, $_column-width) {\n      $_columns   : susy-get(columns, $layout);\n      $_gutters   : susy-get(gutters, $layout);\n      $_spread    : if(is-split($layout), wide, narrow);\n      $_width     : susy-sum($_columns, $_gutters, $_spread) * $_column-width;\n    } @else {\n      $_width: 100%;\n    }\n  }\n\n  @return $_width;\n}\n\n// Parse Container Position\n// ------------------------\n// Parse the $container-position into margin values.\n// - [$justify]   : left | center | right | <length> [<length>]\n@function parse-container-position(\n  $justify: map-get($susy-defaults, container-position)\n) {\n  $_return: if($justify == left, 0, auto) if($justify == right, 0, auto);\n\n  @if not(index(left right center, $justify)) {\n    $_return: nth($justify, 1);\n    $_return: $_return if(length($justify) > 1, nth($justify, 2), $_return);\n  }\n\n  @return $_return;\n}\n","// Susy Fallback Clearfix\n// ======================\n\n\n// Clearfix\n// --------\n// Check for an existing support mixin, or provide a simple fallback.\n@mixin susy-clearfix {\n  @if susy-support(clearfix, (mixin: clearfix)) {\n    @include clearfix;\n  } @else {\n    &:after {\n      content: \" \";\n      display: block;\n      clear: both;\n    }\n  }\n}\n","// Example usage:\r\n// .wrapper {\r\n//   @include clearfix;\r\n// }\r\n@mixin clearfix {\r\n  &::after {\r\n    clear: both;\r\n    content: '';\r\n    display: table;\r\n  }\r\n}\r\n",".header {\r\n  @include container;\r\n  padding-top: 38px;\r\n  text-align: center;\r\n}\r\n\r\n.header__inner {\r\n  @include clearfix;\r\n  @include span(10);\r\n  @include push(1);\r\n  float: none;\r\n}\r\n\r\n.header__social,\r\n.header__search {\r\n  @include span(2 of 10);\r\n}\r\n\r\n.header__logo {\r\n  @include span(6 of 10);\r\n}\r\n\r\n.header__search {\r\n  padding-top: 25px;\r\n  text-align: right;\r\n\r\n  input {\r\n    font-family: $primary-font;\r\n    font-size: 1.6rem;\r\n    width: 90%;\r\n    outline: none;\r\n    border: 0;\r\n    border-bottom: 1px solid #e1e1e1;\r\n    color: #7a7a7a;\r\n    padding-bottom: 5px;\r\n  }\r\n}\r\n\r\n.header__social {\r\n  padding-top: 25px;\r\n  text-align: left;\r\n\r\n  a {\r\n    display: inline-block;\r\n    padding: 0 15px;\r\n\r\n    &:first-child {\r\n      padding-left: 0;\r\n    }\r\n\r\n    &:last-child {\r\n      padding-right: 0;\r\n    }\r\n  }\r\n\r\n  img {\r\n    width: 24px;\r\n  }\r\n}\r\n","// Span Syntax\n// ===========\n\n// Span [mixin]\n// ------------\n// Set a spanning element using shorthand syntax.\n// - $span  : <span>\n@mixin span(\n  $span\n) {\n  $inspect: $span;\n  $span: parse-span($span);\n  $output: span-math($span);\n  $nesting: susy-get(span, $span);\n  $clear: susy-get(clear, $span);\n\n  $box: susy-get(box-sizing, $span);\n  $content-box: if(susy-get(global-box-sizing) != 'border-box', true, false);\n  $box: $box or if(is-inside($span) and $content-box, border-box, null);\n\n  @if $clear == break {\n    @include break;\n  } @else if $clear == nobreak {\n    @include nobreak;\n  }\n\n  @include susy-inspect(span, $inspect);\n  @include output((box-sizing: $box));\n  @include float-span-output($output...);\n\n  @if valid-columns($nesting, silent) {\n    @include nested($span) { @content; }\n  } @else {\n    @content;\n  }\n}\n\n// Span [function]\n// ---------------\n// Return the width of a span.\n// - $span  : <span>\n@function span(\n  $span\n) {\n  @return get-span-width($span);\n}\n\n// Span Math\n// ---------\n// Get all the span results.\n// - $span: <map>\n@function span-math(\n  $span\n) {\n  $nest             : if(susy-get(role, $span) == nest, true, false);\n  $split-nest       : if(is-split($span) and $nest, true, false);\n  $edge             : get-edge($span);\n  $location         : get-location($span);\n\n  $float            : from;\n  $padding-before   : null;\n  $padding-after    : null;\n  $margin-before    : null;\n  $margin-after     : null;\n\n  // calculate widths\n  $spread: index(map-values($span), spread);\n  $span: if($split-nest and not($spread), map-merge($span, (spread: wide)), $span);\n  $width: get-span-width($span);\n  $gutters: get-gutters($span);\n\n  // apply gutters\n  @if is-inside($span) {\n    @if not(susy-get(role, $span)) {\n      $padding-before: map-get($gutters, before);\n      $padding-after: map-get($gutters, after);\n    }\n  } @else {\n    @if not($split-nest) {\n      $margin-before: map-get($gutters, before);\n      $margin-after: map-get($gutters, after);\n    }\n  }\n\n  // special margin handling\n  @if susy-get(output, $span) == isolate and $location {\n    $margin-before: get-isolation($span);\n    $margin-after: -100%;\n  } @else if $edge {\n    $is-split: is-split($span);\n    $pos: susy-get(gutter-position, $span);\n\n    @if $edge == last {\n      $float: susy-get(last-flow, $span);\n    }\n\n    @if not($is-split) {\n      @if $edge == full or ($edge == first and $pos == before) {\n        $margin-before: 0;\n      }\n      @if $edge == full or ($edge == last and $pos == after) {\n        $margin-after: 0;\n      }\n    }\n\n  }\n\n  @return (\n    width           : $width,\n    float           : $float,\n    margin-before   : $margin-before,\n    margin-after    : $margin-after,\n    padding-before  : $padding-before,\n    padding-after   : $padding-after,\n    flow            : susy-get(flow, $span),\n  );\n}\n\n// Get Span Width\n// --------------\n// Return span width.\n// - $span: <map>\n@function get-span-width(\n  $span\n) {\n  $span     : parse-span($span);\n\n  $n        : susy-get(span, $span);\n  $location : get-location($span);\n  $columns  : susy-get(columns, $span);\n  $gutters  : susy-get(gutters, $span);\n  $spread   : susy-get(spread, $span);\n\n  $context  : null;\n  $span-sum : null;\n  $width    : null;\n\n  @if $n == 'full' {\n    $pos: susy-get(gutter-position, $span);\n    $role: susy-get(role, $span);\n    $n: if($pos == split and $role != nest, susy-count($columns), 100%);\n  }\n\n  @if type-of($n) != number {\n    @warn \"(#{type-of($n)}) #{$n} is not a valid span.\";\n  } @else if unitless($n) {\n    $context: susy-sum($columns, $gutters, if(is-split($span), wide, narrow));\n    $spread: if(is-inside($span), $spread or wide, $spread);\n    $span-sum: susy($n, $location, $columns, $gutters, $spread);\n\n    $_math: susy-get(math, $span);\n    $_column-width: susy-get(column-width, $span);\n    @if $_math == static {\n      $width: $span-sum * valid-column-math($_math, $_column-width);\n    } @else {\n      $width: percentage($span-sum / $context);\n    }\n  } @else {\n    $width: $n;\n  }\n\n  @return $width;\n}\n","// Direction Helpers\n// =================\n\n// Susy Flow Defaults\n// ------------------\n// - PRIVATE\n@include susy-defaults((\n  flow: ltr,\n));\n\n// Get Direction\n// -------------\n// Return the 'from' or 'to' direction of a ltr or rtl flow.\n// - [$flow]  : ltr | rtl\n// - [$key]   : from | to\n@function get-direction(\n  $flow: map-get($susy-defaults, flow),\n  $key: from\n) {\n  $return: if($flow == rtl, (from: right, to: left), (from: left, to: right));\n  @return map-get($return, $key);\n}\n\n// To\n// --\n// Return the 'to' direction of a flow\n// - [$flow]  : ltr | rtl\n@function to(\n  $flow: map-get($susy-defaults, flow)\n) {\n  @return get-direction($flow, to);\n}\n\n// From\n// ----\n// Return the 'from' direction of a flow\n// - [$flow]  : ltr | rtl\n@function from(\n  $flow: map-get($susy-defaults, flow)\n) {\n  @return get-direction($flow, from);\n}\n","// Gutter Syntax\n// =============\n\n\n// Gutters\n// -------\n// Set gutters on an element.\n// - [$span]   : <settings>\n@mixin gutters(\n  $span: $susy\n) {\n  $inspect  : $span;\n  $span     : parse-gutters($span);\n  $_gutters : get-gutters($span);\n\n  $_output: (\n    before: map-get($_gutters, before),\n    after: map-get($_gutters, after),\n    flow: susy-get(flow, $span),\n  );\n\n  @include susy-inspect(gutters, $inspect);\n\n  @if is-inside($span) {\n    @include padding-output($_output...);\n  } @else {\n    @include margin-output($_output...);\n  }\n}\n\n@mixin gutter(\n  $span: $susy\n) {\n  @include gutters($span);\n}\n\n\n// Gutter\n// ------\n// Return the width of a gutter.\n// - [$span]   : <settings>\n@function gutter(\n  $span: $susy\n) {\n  $span: parse-gutters($span);\n\n  $_gutters: get-gutters($span);\n  $_gutters: map-get($_gutters, before) or map-get($_gutters, after);\n\n  @return $_gutters;\n}\n\n@function gutters(\n  $span: $susy\n) {\n  @return gutter($span);\n}\n\n\n// Get Gutter Width\n// ----------------\n// Return gutter width.\n// - [$context]: <context>\n@function get-gutter-width(\n  $context: $susy\n) {\n  $context  : parse-gutters($context);\n\n  $_gutters : susy-get(gutters, $context);\n  $_gutter  : susy-get(gutter-override, $context);\n\n  @if $_gutters and ($_gutters > 0) and not($_gutter) {\n    $_column-width: susy-get(column-width, $context);\n    $_math: gutter-math($context);\n    @if $_math == static {\n      $_gutter: $_gutters * valid-column-math($_math, $_column-width);\n    } @else {\n      $_columns : susy-get(columns, $context);\n      $_spread  : if(is-split($context), wide, susy-get(spread, $context));\n      $_gutter  : percentage($_gutters / susy-sum($_columns, $_gutters, $_spread));\n    }\n  }\n\n  $_gutter: if($_gutter == 'no-gutters' or $_gutter == 'no-gutter', null, $_gutter);\n\n  @return $_gutter;\n}\n\n\n// Get Gutters\n// -----------\n// Return before and after gutter values.\n// - [$context]: <context>\n@function get-gutters(\n  $context: $susy\n) {\n  $context            : parse-gutters($context);\n\n  $_gutter-position   : susy-get(gutter-position, $context);\n  $_gutter            : get-gutter-width($context);\n\n  $_return            : (before: null, after: null);\n\n  @if is-split($context) and $_gutter {\n    $_gutter: $_gutter / 2;\n    $_return: map-merge($_return, (before: $_gutter, after: $_gutter));\n  } @else {\n    $_return: map-merge($_return, ($_gutter-position: $_gutter));\n  }\n\n  @return $_return;\n}\n\n\n// Is Inside\n// ---------\n// Returns true if gutters are inside.\n// $context: <context>\n@function is-inside(\n  $context\n) {\n  $_inside: inside inside-static;\n  $_gutter-position: susy-get(gutter-position, $context);\n\n  @return if(index($_inside, $_gutter-position), true, false);\n}\n\n\n// Is Split\n// --------\n// Returns true if gutters are split.\n// $context: <context>\n@function is-split(\n  $context\n) {\n  $_split: split inside inside-static;\n  $_gutter-position: susy-get(gutter-position, $context);\n\n  @return if(index($_split, $_gutter-position), true, false);\n}\n\n\n// Gutter Math\n// -----------\n// Return the math to use for gutter calculations\n// $context: <context>\n@function gutter-math(\n  $context: $susy\n) {\n  $_return  : susy-get(math, $context);\n  $_return  : if(susy-get(gutter-position, $context) == inside-static, static, $_return);\n\n  @return $_return;\n}\n","// rem Support\n// ===========\n\n// rem\n// ---\n// Check for an existing support mixin, or output directly.\n// - $prop  : <css property>\n// - $val   : <css value>\n@mixin susy-rem(\n  $prop,\n  $val\n) {\n  $_reqs: (\n    variable: rhythm-unit rem-with-px-fallback,\n    mixin: rem,\n  );\n  @if susy-support(rem, $_reqs, $warn: false) and $rhythm-unit == rem {\n    @include rem($prop, $val);\n  } @else {\n    #{$prop}: $val;\n  }\n}\n",".main-nav {\r\n  padding: 35px 0;\r\n  margin-bottom: 40px;\r\n}\r\n\r\n.main-nav__item {\r\n  display: inline-block;\r\n  padding: 0 25px;\r\n}\r\n\r\n.main-nav-link {\r\n  font-family: $primary-font;\r\n  font-size: 1.8rem;\r\n  color: #000;\r\n}\r\n","/* Slider */\r\n\r\n.slick-slider {\r\n  position: relative;\r\n  display: block;\r\n  box-sizing: border-box;\r\n  -webkit-touch-callout: none;\r\n  -webkit-user-select: none;\r\n  -khtml-user-select: none;\r\n  -moz-user-select: none;\r\n  -ms-user-select: none;\r\n  user-select: none;\r\n  -ms-touch-action: pan-y;\r\n  touch-action: pan-y;\r\n  -webkit-tap-highlight-color: transparent;\r\n}\r\n\r\n.slick-list {\r\n  position: relative;\r\n  overflow: hidden;\r\n  display: block;\r\n  margin: 0;\r\n  padding: 0;\r\n\r\n  &:focus {\r\n    outline: none;\r\n  }\r\n\r\n  &.dragging {\r\n    cursor: pointer;\r\n    cursor: hand;\r\n  }\r\n}\r\n\r\n.slick-slider .slick-track,\r\n.slick-slider .slick-list {\r\n  -webkit-transform: translate3d(0, 0, 0);\r\n  -moz-transform: translate3d(0, 0, 0);\r\n  -ms-transform: translate3d(0, 0, 0);\r\n  -o-transform: translate3d(0, 0, 0);\r\n  transform: translate3d(0, 0, 0);\r\n}\r\n\r\n.slick-track {\r\n  position: relative;\r\n  left: 0;\r\n  top: 0;\r\n  display: block;\r\n\r\n  &:before,\r\n  &:after {\r\n    content: \"\";\r\n    display: table;\r\n  }\r\n\r\n  &:after {\r\n    clear: both;\r\n  }\r\n\r\n  .slick-loading & {\r\n    visibility: hidden;\r\n  }\r\n}\r\n\r\n.slick-slide {\r\n  float: left;\r\n  height: 100%;\r\n  min-height: 1px;\r\n\r\n  [dir=\"rtl\"] & {\r\n    float: right;\r\n  }\r\n\r\n  img {\r\n    display: block;\r\n  }\r\n\r\n  &.slick-loading img {\r\n    display: none;\r\n  }\r\n\r\n  display: none;\r\n\r\n  &.dragging img {\r\n    pointer-events: none;\r\n  }\r\n\r\n  .slick-initialized & {\r\n    display: block;\r\n  }\r\n\r\n  .slick-loading & {\r\n    visibility: hidden;\r\n  }\r\n  \r\n  .slick-vertical & {\r\n    display: block;\r\n    height: auto;\r\n    border: 1px solid transparent;\r\n  }\r\n}\r\n\r\n.slick-arrow.slick-hidden {\r\n  display: none;\r\n}\r\n\r\n/* Dots */\r\n\r\n.slick-dotted.slick-slider {\r\n    margin-bottom: 30px;\r\n}\r\n\r\n.slick-dots {\r\n  position: absolute;\r\n  bottom: 0;\r\n  list-style: none;\r\n  display: block;\r\n  text-align: center;\r\n  padding: 0;\r\n  margin: 0;\r\n  width: 100%;\r\n\r\n  li {\r\n    position: relative;\r\n    display: inline-block;\r\n    height: 20px;\r\n    width: 20px;\r\n    margin: 0 5px;\r\n    padding: 0;\r\n    cursor: pointer;\r\n\r\n    button {\r\n      border: 0;\r\n      background: transparent;\r\n      display: block;\r\n      height: 20px;\r\n      width: 20px;\r\n      outline: none;\r\n      line-height: 0px;\r\n      font-size: 0px;\r\n      color: transparent;\r\n      padding: 5px;\r\n      cursor: pointer;\r\n\r\n      &:hover, &:focus {\r\n        outline: none;\r\n\r\n        &:before {\r\n          opacity: 1;\r\n        }\r\n      }\r\n      &:before {\r\n        position: absolute;\r\n        top: 0;\r\n        left: 0;\r\n        content: \"â€¢\";\r\n        width: 20px;\r\n        height: 20px;\r\n        font-size: 26px;\r\n        line-height: 20px;\r\n        text-align: center;\r\n        color: #000;\r\n        opacity: .25;\r\n        -webkit-font-smoothing: antialiased;\r\n        -moz-osx-font-smoothing: grayscale;\r\n      }\r\n    }\r\n    \r\n    &.slick-active button:before {\r\n      color: #000;\r\n      opacity: .75;\r\n    }\r\n  }\r\n}\r\n",".img-fill{\r\n  width: 100%;\r\n  display: block;\r\n  overflow: hidden;\r\n  position: relative;\r\n  text-align: center\r\n}\r\n\r\n.img-fill img {\r\n  min-height: 100%;\r\n  min-width: 100%;\r\n  position: relative;\r\n  display: inline-block;\r\n  max-width: none;\r\n}\r\n\r\n.blocks-box,\r\n.slick-slider {\r\n  margin: 0;\r\n  padding: 0!important;\r\n}\r\n\r\n.slick-slide {\r\n  float: left;\r\n  padding: 0;\r\n}\r\n\r\n.Modern-Slider .item .img-fill .info{\r\n  position:absolute;\r\n  width:100%;\r\n  height:100%;\r\n  top:0px;\r\n  left:0px;\r\n  background:rgba(0,0,0,.50);\r\n  text-align:center;\r\n}\r\n\r\n.Modern-Slider .item .img-fill img{\r\n  filter:blur(5px);\r\n}\r\n\r\n.Modern-Slider .item .info > div {\r\n  @include center(y);\r\n  position: absolute;\r\n  text-align: left;\r\n  right: 20%;\r\n\r\n  span {\r\n    background: #fff;\r\n    display: inline-block;\r\n    font-weight: 600;\r\n    padding: 5px 10px;\r\n\r\n    &:last-child {\r\n      margin-top: -5px;\r\n    }\r\n  }\r\n}\r\n\r\n.Modern-Slider .NextArrow {\r\n  position:absolute;\r\n  top:50%;\r\n  right:0px;\r\n  width:45px;\r\n  height:45px;\r\n  background:rgba(0,0,0,.50);\r\n  border:0 none;\r\n  margin-top:-22.5px;\r\n  text-align:center;\r\n  color:#FFF;\r\n  z-index:5;\r\n}\r\n\r\n.Modern-Slider .NextArrow:before {\r\n  content:'\\f105';\r\n}\r\n\r\n.Modern-Slider .PrevArrow {\r\n  position:absolute;\r\n  top:50%;\r\n  left:0px;\r\n  width:45px;\r\n  height:45px;\r\n  background:rgba(0,0,0,.50);\r\n  border:0 none;\r\n  margin-top:-22.5px;\r\n  text-align:center;\r\n  color:#FFF;\r\n  z-index:5;\r\n}\r\n\r\n.Modern-Slider .PrevArrow:before {\r\n  content:'\\f104';\r\n}\r\n\r\n.Modern-Slider {\r\n  background:#000;\r\n}\r\n","// center vertically and/or horizontally an absolute positioned element\r\n@mixin center($xy:xy) {\r\n  @if $xy == xy {\r\n    bottom: auto;\r\n    left: 50%;\r\n    right: auto;\r\n    top: 50%;\r\n    transform: translateX(-50%) translateY(-50%);\r\n    //@include transform(translateX(-50%) translateY(-50%));\r\n  } @else if $xy == x {\r\n    left: 50%;\r\n    right: auto;\r\n    transform: translateX(-50%);\r\n    //@include transform(translateX(-50%));\r\n  } @else if $xy == y {\r\n    bottom: auto;\r\n    top: 50%;\r\n    transform: translateY(-50%);\r\n    //@include transform(translateY(-50%));\r\n  }\r\n}\r\n",".restaurants__header {\r\n  @include container;\r\n  padding: 90px 0;\r\n}\r\n\r\n.restaurants__header-inner {\r\n  @include span(4);\r\n  float: none;\r\n  margin: 0 auto;\r\n}\r\n\r\n.restaurants__title {\r\n  font-family: $primary-font;\r\n  font-weight: 600;\r\n  font-size: 3rem;\r\n  color: #000;\r\n  text-align: center;\r\n  margin-bottom: 40px;\r\n}\r\n\r\n.restaurants__text {\r\n  font-family: $primary-font;\r\n  font-size: 1.8rem;\r\n  color: #000;\r\n  line-height: 27px;\r\n  text-align: center;\r\n}\r\n\r\n.restaurants__body {\r\n  @include container(1590px);\r\n}\r\n\r\n.restaurants {\r\n  .column {\r\n    width: percentage(480 / 1590);\r\n    float: left;\r\n    position: relative;\r\n    min-height: 1px;\r\n    margin-right: percentage(75 / 1590);\r\n\r\n    &:last-child {\r\n      margin-right: 0;\r\n    }\r\n  }\r\n}\r\n\r\n.restaurant {\r\n  figure {\r\n    img {\r\n      position: relative;\r\n    }\r\n  }\r\n\r\n  &:hover {\r\n    img {\r\n      z-index: 100;\r\n    }\r\n  }\r\n}\r\n\r\n.restaurant-hover {\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  height: 100%;\r\n  width: 100%;\r\n  \r\n  &:hover {\r\n    \r\n    .restaurant-hover__body {\r\n      opacity: 0;\r\n    }\r\n    \r\n    .restaurant-hover__inf {\r\n      opacity: 1;\r\n    }\r\n  }\r\n}\r\n\r\n.restaurant-hover__body {\r\n  @include center(y);\r\n  position: relative;\r\n  text-align: center;\r\n  opacity: 1;\r\n  transition: opacity .5s ease-in-out;\r\n}\r\n\r\n.restaurant-hover__inf {\r\n  @include center(y);\r\n  position: relative;\r\n  text-align: center;\r\n  opacity: 0;\r\n  transition: opacity .5s ease-in-out;\r\n}\r\n",".projects__header {\r\n  @include container;\r\n  padding: 90px 0;\r\n}\r\n\r\n.projects__header-inner {\r\n  @include span(4);\r\n  float: none;\r\n  margin: 0 auto;\r\n}\r\n\r\n.projects__title {\r\n  font-family: $primary-font;\r\n  font-weight: 600;\r\n  font-size: 3rem;\r\n  color: #000;\r\n  text-align: center;\r\n  margin-bottom: 40px;\r\n}\r\n\r\n.projects__text {\r\n  font-family: $primary-font;\r\n  font-size: 1.8rem;\r\n  color: #000;\r\n  line-height: 27px;\r\n  text-align: center;\r\n}\r\n\r\n.projects__body {\r\n  @include container(1590px);\r\n}\r\n\r\n.projects {\r\n  .column {\r\n    width: percentage(480 / 1590);\r\n    float: left;\r\n    position: relative;\r\n    min-height: 1px;\r\n    margin-right: percentage(75 / 1590);\r\n\r\n    &:last-child {\r\n      margin-right: 0;\r\n    }\r\n  }\r\n}\r\n",".slider-nav__item {\r\n  display: inline-block;\r\n}\r\n"],"sourceRoot":"/source/"}